define({ "api": [  {    "type": "post",    "url": "/user",    "title": "Create a new user",    "sampleRequest": [      {        "url": "http://localhost:3000/users/v1/user"      }    ],    "version": "0.1.0",    "name": "CreateUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "fname",            "description": "<p>User's first name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "lname",            "description": "<p>User's last name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>User's email.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "phone",            "description": "<p>User's phone number.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>User's password.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n      \"fname\": \"Kennet\",\n      \"lname\": \"Jacob\",\n      \"email\": \"kennetjacob@gmail.com\",\n      \"password\": \"demodemo1234\",\n      \"phone\": \"9994012253\"\n }",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n      \"secretKey\": \"2b73926b3cf4f6554eb5f2eadc38be95e3b1e883b7e16d3f80fbe6b5732501007575f90ea947d988a6c63bab8216ca2dd2fcc2a0e7b604a8f8a76c3856f4fdf2\",\n      \"publicKey\": \"5ba30d56a51dea3c77bba7bddc39885d6a01879d18dbb6eb4df406d6988d8d55\",\n      \"userId\": \"67\",\n      \"authCode\": 3759\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserAlreadyExists",            "description": "<p>The id of the User was not found.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"User already exists\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User"  },  {    "type": "delete",    "url": "/user/:id",    "title": "Delete a user",    "sampleRequest": [      {        "url": "http://localhost:3000/users/v1/user/:id"      }    ],    "version": "0.1.0",    "name": "DeleteUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique ID.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id",    "title": "Show user details",    "sampleRequest": [      {        "url": "http://localhost:3000/users/v1/user/:id"      }    ],    "version": "0.1.0",    "name": "ShowUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique ID.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/user",    "title": "Update user details",    "sampleRequest": [      {        "url": "http://localhost:3000/users/v1/user/:id"      }    ],    "version": "0.1.0",    "name": "UpdateUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique ID.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "fname",            "description": "<p>User's first name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "lname",            "description": "<p>User's last name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>User's email.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "phone",            "description": "<p>User's phone number.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>User's password.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n      \"fname\": \"Kennet\",\n      \"lname\": \"Paul\",\n      \"email\": \"kennetjacob@gmail.com\",\n      \"password\": \"demodemo1234\",\n      \"phone\": \"9994012253\"\n }",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"secret\": \"02a84f8833b7cec407cddeab8cc1e58e5a2a886c7b50e4e51da367f90bf31e7477c6b3504064571590852d3c331bb771067e579181e7a9930ba06ae3649b83eb\",\n    \"atime\": \"Mon, 07 Sep 2015 19:36:53 GMT\",\n    \"utime\": \"Mon, 07 Sep 2015 19:37:04 GMT\",\n    \"phone\": \"9994012253\",\n    \"verified\": 1,\n    \"user_id\": 69,\n    \"password\": \"1000:2awcPmOPysUHz6E1XoZYHJXjRazzOPMI:c7YSMYfFUlnoHVOiSI2T/uias9JnzQxg\",\n    \"ctime\": \"Mon, 07 Sep 2015 19:36:53 GMT\",\n    \"publickey\": \"508f214c74b7c4c11cfc87eb530a75337b39f875f6dd01dbb1c3e02bfb44f954\",\n    \"user_name\": \"kennetjacob@gmail.com\",\n    \"role\": \"User\",\n    \"first_name\": \"Kennet\",\n    \"last_name\": \"Paul\",\n    \"email\": \"kennetjacob@gmail.com\",\n    \"auth_code\": \"3160\"\n }",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  }] });